


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ***********************
    2 00000000         ;                            EXTERN PARAMETERS
    3 00000000         ;*******************************************************
                       ***********************
    4 00000000         
    5 00000000                 IMPORT           g_active_task
    6 00000000                 IMPORT           g_preferred_ready_task
    7 00000000                 IMPORT           krhino_stack_ovf_check
    8 00000000         
    9 00000000         ;*******************************************************
                       ***********************
   10 00000000         ;                            EXPORT FUNCTIONS
   11 00000000         ;*******************************************************
                       ***********************
   12 00000000         
   13 00000000                 EXPORT           cpu_intrpt_save
   14 00000000                 EXPORT           cpu_intrpt_restore
   15 00000000                 EXPORT           cpu_task_switch
   16 00000000                 EXPORT           cpu_intrpt_switch
   17 00000000                 EXPORT           cpu_first_task_start
   18 00000000         
   19 00000000                 EXPORT           PendSV_Handler
   20 00000000         
   21 00000000         ;*******************************************************
                       ***********************
   22 00000000         ;                                 EQUATES
   23 00000000         ;*******************************************************
                       ***********************
   24 00000000         
   25 00000000 E000ED04 
                       SCB_ICSR
                               EQU              0xE000ED04  ; Interrupt Control
                                                             and State Register
                                                            .
   26 00000000 10000000 
                       ICSR_PENDSVSET
                               EQU              0x10000000  ; Value to trigger 
                                                            PendSV exception.
   27 00000000         
   28 00000000 E000ED22 
                       SHPR3_PRI_14
                               EQU              0xE000ED22  ; System Handler Pr
                                                            iority Register 3 (
                                                            PendSV).
   29 00000000 000000FF 
                       PRI_LVL_PENDSV
                               EQU              0xFF        ; PendSV priority l
                                                            evel (lowest).
   30 00000000 E000ED23 
                       SHPR3_PRI_15
                               EQU              0xE000ED23  ; System Handler Pr
                                                            iority Register 3 (
                                                            SysTick).
   31 00000000 000000FF 
                       PRI_LVL_SYSTICK
                               EQU              0xFF        ; SYstick priority 
                                                            level (lowest).
   32 00000000         



ARM Macro Assembler    Page 2 


   33 00000000         ;*******************************************************
                       ***********************
   34 00000000         ;                        CODE GENERATION DIRECTIVES
   35 00000000         ;*******************************************************
                       ***********************
   36 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   37 00000000                 THUMB
   38 00000000                 REQUIRE8
   39 00000000                 PRESERVE8
   40 00000000         
   41 00000000         ;*******************************************************
                       ***********************
   42 00000000         ; Functions:
   43 00000000         ;     size_t cpu_intrpt_save(void);
   44 00000000         ;     void cpu_intrpt_restore(size_t cpsr);
   45 00000000         ;*******************************************************
                       ***********************
   46 00000000         cpu_intrpt_save
   47 00000000 F3EF 8010       MRS              R0, PRIMASK
   48 00000004 B672            CPSID            I
   49 00000006 4770            BX               LR
   50 00000008         
   51 00000008         cpu_intrpt_restore
   52 00000008 F380 8810       MSR              PRIMASK, R0
   53 0000000C 4770            BX               LR
   54 0000000E         
   55 0000000E         ;*******************************************************
                       ***********************
   56 0000000E         ; Functions:
   57 0000000E         ;     void cpu_intrpt_switch(void);
   58 0000000E         ;     void cpu_task_switch(void);
   59 0000000E         ;*******************************************************
                       ***********************
   60 0000000E         cpu_task_switch
   61 0000000E 481D            LDR              R0, =SCB_ICSR
   62 00000010 F04F 5180       LDR              R1, =ICSR_PENDSVSET
   63 00000014 6001            STR              R1, [R0]
   64 00000016 4770            BX               LR
   65 00000018         
   66 00000018         cpu_intrpt_switch
   67 00000018 481A            LDR              R0, =SCB_ICSR
   68 0000001A F04F 5180       LDR              R1, =ICSR_PENDSVSET
   69 0000001E 6001            STR              R1, [R0]
   70 00000020 4770            BX               LR
   71 00000022         
   72 00000022         ;*******************************************************
                       ***********************
   73 00000022         ; Functions:
   74 00000022         ;     void cpu_first_task_start(void);
   75 00000022         ;*******************************************************
                       ***********************
   76 00000022         cpu_first_task_start
   77 00000022         ;set PendSV prority to the lowest
   78 00000022 4819            LDR              R0, =SHPR3_PRI_14
   79 00000024 F04F 01FF       LDR              R1, =PRI_LVL_PENDSV
   80 00000028 7001            STRB             R1, [R0]
   81 0000002A         
   82 0000002A         ;set Systick prority to the lowest



ARM Macro Assembler    Page 3 


   83 0000002A 4818            LDR              R0, =SHPR3_PRI_15
   84 0000002C F04F 01FF       LDR              R1, =PRI_LVL_SYSTICK
   85 00000030 7001            STRB             R1, [R0]
   86 00000032         
   87 00000032         ;indicate PendSV_Handler branch to _pendsv_handler_nosav
                       e
   88 00000032 2000            MOVS             R0, #0
   89 00000034 F380 8809       MSR              PSP, R0
   90 00000038         
   91 00000038         ;align MSP to 8 byte
   92 00000038 F3EF 8008       MRS              R0, MSP
   93 0000003C 08C0            LSRS             R0, R0, #3
   94 0000003E 00C0            LSLS             R0, R0, #3
   95 00000040 F380 8808       MSR              MSP, R0
   96 00000044         
   97 00000044         ;make PendSV exception pending
   98 00000044 480F            LDR              R0, =SCB_ICSR
   99 00000046 F04F 5180       LDR              R1, =ICSR_PENDSVSET
  100 0000004A 6001            STR              R1, [R0]
  101 0000004C         
  102 0000004C         ;goto PendSV_Handler
  103 0000004C B662            CPSIE            I
  104 0000004E E7FE            B                .
  105 00000050         
  106 00000050         ;*******************************************************
                       ***********************
  107 00000050         ; Functions:
  108 00000050         ;     void krhino_pendsv_handler(void);
  109 00000050         ;*******************************************************
                       ***********************
  110 00000050         PendSV_Handler
  111 00000050 B672            CPSID            I
  112 00000052 F3EF 8009       MRS              R0, PSP
  113 00000056         ;branch if cpu_first_task_start
  114 00000056 B138            CBZ              R0, _pendsv_handler_nosave
  115 00000058         
  116 00000058         ;hardware saved R0~R3,R12,LR,PC,xPSR
  117 00000058         
  118 00000058         ;save context
  119 00000058 3824            SUBS             R0, R0, #0x24
  120 0000005A E880 4FF0       STM              R0, {R4-R11, LR}
  121 0000005E         
  122 0000005E         ;g_active_task->task_stack = context region
  123 0000005E 490C            LDR              R1, =g_active_task
  124 00000060 6809            LDR              R1, [R1]
  125 00000062 6008            STR              R0, [R1]
  126 00000064         
  127 00000064 F7FF FFFE       bl               krhino_stack_ovf_check
  128 00000068         
  129 00000068         _pendsv_handler_nosave
  130 00000068 4809            LDR              R0, =g_active_task
  131 0000006A 490A            LDR              R1, =g_preferred_ready_task
  132 0000006C 680A            LDR              R2, [R1]
  133 0000006E 6002            STR              R2, [R0]
  134 00000070         ;R0 = g_active_task->task_stack = context region
  135 00000070 6810            LDR              R0, [R2]
  136 00000072         
  137 00000072         ;restore context
  138 00000072 E890 4FF0       LDM              R0, {R4-R11, LR}



ARM Macro Assembler    Page 4 


  139 00000076 3024            ADDS             R0, R0, #0x24
  140 00000078         
  141 00000078         ;return stack = PSP
  142 00000078 F380 8809       MSR              PSP, R0
  143 0000007C         
  144 0000007C         ;after exception return: stack = PSP
  145 0000007C F04E 0E04       ORR              LR, LR, #0x04
  146 00000080         
  147 00000080 B662            CPSIE            I
  148 00000082         ;hardware restore R0~R3,R12,LR,PC,xPSR
  149 00000082 4770            BX               LR
  150 00000084         
  151 00000084                 ALIGN
  152 00000084                 END
              E000ED04 
              E000ED22 
              E000ED23 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=..\obj\port_s.d -o..\obj\port_s.o -I.\RTE\_USART -ID:\Keil\ARM\PAC
K\Keil\STM32F1xx_DFP\1.1.0\Device\Include -ID:\Keil\ARM\CMSIS\Include --predefi
ne="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 525" --predefine="ST
M32F10X_HD SETA 1" --list=.\port_s.lst ..\AliOS-Things-master\platform\arch\arm
\armv7m\armcc\m3\port_s.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 36 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
   Uses
      None
Comment: .text unused
PendSV_Handler 00000050

Symbol: PendSV_Handler
   Definitions
      At line 110 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc
\m3\port_s.s
   Uses
      At line 19 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
Comment: PendSV_Handler used once
_pendsv_handler_nosave 00000068

Symbol: _pendsv_handler_nosave
   Definitions
      At line 129 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc
\m3\port_s.s
   Uses
      At line 114 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc
\m3\port_s.s
Comment: _pendsv_handler_nosave used once
cpu_first_task_start 00000022

Symbol: cpu_first_task_start
   Definitions
      At line 76 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
   Uses
      At line 17 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
Comment: cpu_first_task_start used once
cpu_intrpt_restore 00000008

Symbol: cpu_intrpt_restore
   Definitions
      At line 51 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
   Uses
      At line 14 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
Comment: cpu_intrpt_restore used once
cpu_intrpt_save 00000000

Symbol: cpu_intrpt_save
   Definitions
      At line 46 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
   Uses
      At line 13 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
Comment: cpu_intrpt_save used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

cpu_intrpt_switch 00000018

Symbol: cpu_intrpt_switch
   Definitions
      At line 66 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
   Uses
      At line 16 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
Comment: cpu_intrpt_switch used once
cpu_task_switch 0000000E

Symbol: cpu_task_switch
   Definitions
      At line 60 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
   Uses
      At line 15 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
Comment: cpu_task_switch used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ICSR_PENDSVSET 10000000

Symbol: ICSR_PENDSVSET
   Definitions
      At line 26 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
   Uses
      At line 62 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
      At line 68 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
      At line 99 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s

PRI_LVL_PENDSV 000000FF

Symbol: PRI_LVL_PENDSV
   Definitions
      At line 29 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
   Uses
      At line 79 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
Comment: PRI_LVL_PENDSV used once
PRI_LVL_SYSTICK 000000FF

Symbol: PRI_LVL_SYSTICK
   Definitions
      At line 31 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
   Uses
      At line 84 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
Comment: PRI_LVL_SYSTICK used once
SCB_ICSR E000ED04

Symbol: SCB_ICSR
   Definitions
      At line 25 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
   Uses
      At line 61 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
      At line 67 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
      At line 98 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s

SHPR3_PRI_14 E000ED22

Symbol: SHPR3_PRI_14
   Definitions
      At line 28 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
   Uses
      At line 78 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
Comment: SHPR3_PRI_14 used once
SHPR3_PRI_15 E000ED23



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: SHPR3_PRI_15
   Definitions
      At line 30 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
   Uses
      At line 83 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\
m3\port_s.s
Comment: SHPR3_PRI_15 used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

g_active_task 00000000

Symbol: g_active_task
   Definitions
      At line 5 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\m
3\port_s.s
   Uses
      At line 123 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc
\m3\port_s.s
      At line 130 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc
\m3\port_s.s

g_preferred_ready_task 00000000

Symbol: g_preferred_ready_task
   Definitions
      At line 6 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\m
3\port_s.s
   Uses
      At line 131 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc
\m3\port_s.s
Comment: g_preferred_ready_task used once
krhino_stack_ovf_check 00000000

Symbol: krhino_stack_ovf_check
   Definitions
      At line 7 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc\m
3\port_s.s
   Uses
      At line 127 in file ..\AliOS-Things-master\platform\arch\arm\armv7m\armcc
\m3\port_s.s
Comment: krhino_stack_ovf_check used once
3 symbols
352 symbols in table
